from openai import OpenAI
from dotenv import load_dotenv
import os
import json

# Load environment variables from .env file
load_dotenv()

# Initialize the OpenAI client using your endpoint and token
client = OpenAI(
    api_key=os.getenv("OPENAI_API_KEY"),
)

def generate_luxury_tagline_from_json(product_description_image, product_attributes) -> str:
    """
    Accepts a JSON string (json_input) containing arbitrary product attributes.
    Iterates through all keys (including nested structures) and includes them in the GPT prompt.
    Returns a luxury-fashion-style tagline generated by GPT.
    """

    prompt_lines = [
        "You are an expert luxury fashion editor writing an editorial tagline for a new limited-edition product by a well-known luxury brand.",
        "Use only the information given and do not invent or embellish any details.",
        "",
        "Here are all the product attributes provided:"
    ]

    # Dynamically iterate over every top-level key in the dictionary
    for key, value in product_attributes.items():
        # Convert value to a nicely formatted JSON string (properly handle nested lists/dicts)
        # We indent nested objects by two spaces for readability
        if key in ["Editor's Notes","Images","url"]:
            continue
        pretty_value = json.dumps(value, indent=2, ensure_ascii=False)
        # Prepend each line of the value with two spaces so it's clear it belongs under the key
        indented_value = "\n".join([f"  {line}" for line in pretty_value.splitlines()])
        # Append a line like "Key:" followed by the indented JSON value
        prompt_lines.append(f"- {key}:\n{indented_value}")

    # Add an instruction about tone and length
    prompt_lines.append("")
    prompt_lines.append("Requirements:")
    prompt_lines.append("- Weave in the brandâ€™s heritage and craftsmanship legacy (if present).")
    prompt_lines.append("- Highlight any design inspiration, unique elements, or USPs provided.")
    prompt_lines.append("- Emphasize exclusivity and ethical sourcing (if those keys exist).")
    prompt_lines.append("- Use evocative, sensory language to appeal to discerning luxury buyers.")
    prompt_lines.append("- Maintain an aspirational, persuasive tone that encourages immediate consideration of purchase.")
    prompt_lines.append("- Keep the tagline under 100 words.")
    prompt_lines.append("\n ####")
    prompt_lines.append(" Below is the visual description of the image. Do take into account while framing the Tagline.")
    prompt_lines.append(f"{product_description_image}")
    
    # Join all lines into a single prompt string
    full_prompt = "\n".join(prompt_lines)

    # Call the OpenAI API with a low temperature to reduce hallucinations
    response = client.chat.completions.create(
        model="gpt-4.1",
        messages=[
            {"role": "system", "content": "You are a world-class luxury fashion editor."},
            {"role": "user", "content": full_prompt}
        ],
        temperature=0.3,
        max_tokens=300
    )

    # Extract and return the generated tagline
    return response.choices[0].message.content.strip()

